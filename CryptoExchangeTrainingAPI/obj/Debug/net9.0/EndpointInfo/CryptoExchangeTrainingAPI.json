{
  "openapi": "3.0.1",
  "info": {
    "title": "CryptoExchangeTrainingAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/Asset": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Получить список активов пользователя.",
        "responses": {
          "200": {
            "description": "Список активов успешно получен."
          },
          "401": {
            "description": "Пользователь не авторизован."
          }
        }
      }
    },
    "/api/Asset/deposit": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Пополнить баланс актива пользователя.",
        "requestBody": {
          "description": "Запрос на пополнение баланса актива.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Баланс актива успешно пополнен."
          },
          "400": {
            "description": "Некорректные данные для пополнения."
          },
          "401": {
            "description": "Пользователь не авторизован."
          },
          "404": {
            "description": "Актив не найден."
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Регистрация нового пользователя.",
        "requestBody": {
          "description": "Данные для регистрации пользователя.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно зарегистрирован."
          },
          "400": {
            "description": "Некорректные данные для регистрации."
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Авторизация пользователя.",
        "requestBody": {
          "description": "Данные для входа пользователя.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная авторизация."
          },
          "400": {
            "description": "Некорректные данные для входа."
          },
          "401": {
            "description": "Неверный email или пароль."
          }
        }
      }
    },
    "/api/Chart/historical/{pair}": {
      "get": {
        "tags": [
          "Chart"
        ],
        "parameters": [
          {
            "name": "pair",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MarketData/{pair}": {
      "get": {
        "tags": [
          "MarketData"
        ],
        "summary": "Получить текущую цену для торговой пары.",
        "parameters": [
          {
            "name": "pair",
            "in": "path",
            "description": "Торговая пара (например, BTCUSDT).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Цена успешно получена."
          },
          "400": {
            "description": "Ошибка при получении рыночных данных."
          }
        }
      }
    },
    "/api/Notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Получить список уведомлений текущего пользователя.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Notification/read/{id}": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Пометить уведомление как прочитанное.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID уведомления.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Notification/{id}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Удалить уведомление.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Token": {
      "get": {
        "tags": [
          "Token"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trade/history": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Получить историю сделок текущего пользователя.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trade/open": {
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "Открыть новую сделку.",
        "requestBody": {
          "description": "Данные для открытия сделки.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTradeRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTradeRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTradeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trade/close/{id}": {
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "Закрыть сделку.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID сделки.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить профиль текущего пользователя.",
        "responses": {
          "200": {
            "description": "Профиль успешно получен."
          },
          "401": {
            "description": "Пользователь не авторизован."
          }
        }
      }
    },
    "/api/User/deposit": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Пополнить баланс пользователя.",
        "requestBody": {
          "description": "Сумма для пополнения.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepositRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Баланс успешно пополнен."
          },
          "400": {
            "description": "Некорректные данные для пополнения."
          }
        }
      }
    },
    "/api/User/transactions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить историю сделок пользователя.",
        "responses": {
          "200": {
            "description": "История сделок успешно получена."
          },
          "401": {
            "description": "Пользователь не авторизован."
          }
        }
      }
    },
    "/ws/price": {
      "get": {
        "tags": [
          "WebSocket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DepositRequestDto": {
        "type": "object",
        "properties": {
          "amount": {
            "minimum": 0,01,
            "type": "number",
            "format": "double"
          },
          "asset": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenTradeRequestDto": {
        "type": "object",
        "properties": {
          "pair": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "leverage": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "stopLoss": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "takeProfit": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}